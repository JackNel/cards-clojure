<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="ReplState" timestamp="1448939601486">{:repl-history {:ide [], :local [&quot;(count (create-deck))&quot; &quot;(rank-names)&quot; &quot;rank-names&quot; &quot;(get rank-names 1)&quot; &quot;(get rank-names 2)&quot; &quot;(get (rank-names 2 2))&quot; &quot;(get rank-names 2 2)&quot; &quot;(create-deck)&quot; &quot;(= [1 2 3] [3 2 1])&quot; &quot;(= #{1 2 3} {3 2 1})&quot; &quot;(count (create-hands (create-deck)))&quot; &quot;(map :suit hand-1)&quot; &quot;(apply = (map :suit hand-1))&quot; &quot;(set (map :suit hand-1))&quot; &quot;(flush hand-1)&quot; &quot;(flush? hand-1)&quot; &quot;(-main)&quot; &quot;(map :suit hand)&quot; &quot;(flush?)&quot; &quot;(def hand-1 #{{:suit :clubs\n               :rank 2}\n              {:suit :clubs\n               :rank 3}\n              {:suit :clubs\n               :rank :queen}\n              {:suit :clubs\n               :rank :king}})&quot; &quot;(def hand-1 #{{:suit :clubs\n               :rank 2}\n              {:suit :clubs\n               :rank 3}\n              {:suit :clubs\n               :rank 4}\n              {:suit :clubs\n               :rank 5}})&quot; &quot;(sort {hand-1})&quot; &quot;(map :rank hand-1)&quot; &quot;(first hand)&quot; &quot;(get first hand)&quot; &quot;(get (first hand-1))&quot; &quot;(first hand-1)&quot; &quot;(- 3 (last hand))&quot; &quot;(first (map :rank hand))&quot; &quot;((sort (map :rank hand-1))\n  (= ((first (map :rank hand-1)) (- 3 (last (map :rank hand-1))))))&quot; &quot;(sort (map :rank hand))&quot; &quot;(sort (map :rank hand-1))&quot; &quot;(first (map :rank hand-1))&quot; &quot;(- 3 (first (map :rank hand-1)))&quot; &quot;hand-1&quot; &quot;(def hand-1 #{{:suit :clubs\n               :rank 3}\n              {:suit :clubs\n               :rank 5}\n              {:suit :clubs\n               :rank 4}\n              {:suit :clubs\n               :rank 2}})&quot; &quot;(apply min (map :rank hand-1))&quot; &quot;(apply max (map :rank hand-1))&quot; &quot;(straight? [hand-1])&quot; &quot;(straight?)&quot; &quot;(def hand-2 #{{:suit :diamonds\n               :rank 2}\n              {:suit :clubs\n               :rank 2}\n              {:suit :clubs\n               :rank 5}\n              {:suit :clubs\n               :rank 4}})&quot; &quot;(count (set (map :rank hand-2)))&quot;], :remote []}}</component>
</project>